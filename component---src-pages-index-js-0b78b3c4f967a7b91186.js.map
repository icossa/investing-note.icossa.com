{"version":3,"sources":["webpack:///./src/pages/index.js","webpack:///./.cache/gatsby-browser-entry.js","webpack:///./.cache/public-page-renderer.js","webpack:///./.cache/public-page-renderer-prod.js","webpack:///./src/components/header.js","webpack:///./src/components/layout.js","webpack:///./src/components/gridItemSbCard.js","webpack:///./src/components/seo.js"],"names":["IndexPage","_ref2","data","Object","_emotion_core__WEBPACK_IMPORTED_MODULE_0__","_components_layout__WEBPACK_IMPORTED_MODULE_6__","_material_ui_core_Grid__WEBPACK_IMPORTED_MODULE_3___default","a","container","direction","spacing","_components_gridItemSbCard__WEBPACK_IMPORTED_MODULE_5__","pages","allScrapboxPage","edges","justify","item","css","_ref","gatsby__WEBPACK_IMPORTED_MODULE_2__","to","_material_ui_core_Button__WEBPACK_IMPORTED_MODULE_4___default","variant","color","query","StaticQueryContext","React","createContext","StaticQuery","props","Consumer","staticQueryData","render","children","propTypes","PropTypes","object","string","isRequired","func","m","module","exports","require","default","ProdPageRenderer","location","pageResources","loader","getResourcesForPathnameSync","pathname","createElement","InternalPageRenderer","assign","json","shape","Header","siteTitle","core_browser_esm","style","background","marginBottom","margin","maxWidth","padding","gatsby_browser_entry","textDecoration","defaultProps","theme","createMuiTheme","palette","primary","main","contrastText","typography","useNextVariants","root","display","justifyContent","flexWrap","Layout","react_default","Fragment","styles","header","site","siteMetadata","title","paddingTop","Date","getFullYear","href","_755544856","node","GridItemSbCard","_ref3","map","_ref4","md","sm","alignItems","_material_ui_core_Card__WEBPACK_IMPORTED_MODULE_4___default","_material_ui_core_CardContent__WEBPACK_IMPORTED_MODULE_5___default","className","key","id","image","src","alt","SEO","description","lang","meta","keywords","_public_static_d_2417117884_json__WEBPACK_IMPORTED_MODULE_1__","metaDescription","react_helmet__WEBPACK_IMPORTED_MODULE_4___default","htmlAttributes","titleTemplate","name","content","property","author","concat","length","join","arrayOf"],"mappings":"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","file":"component---src-pages-index-js-0b78b3c4f967a7b91186.js","sourcesContent":["import React from 'react'\nimport { graphql, Link } from 'gatsby'\n\nimport Grid from '@material-ui/core/Grid';\nimport Button from '@material-ui/core/Button'\n\nimport GridItemSbCard from \"../components/gridItemSbCard\";\n\nimport Layout from '../components/layout'\nimport SEO from '../components/seo'\n\nimport { css } from '@emotion/core'\n\nconst IndexPage = ({ data }) => {\n  return (\n    <Layout>\n      {/* <SEO title=\"Home\" keywords={[`gatsby`, `application`, `react`]} /> */}\n      <Grid container direction=\"row\" spacing={16}>\n        <GridItemSbCard pages={data.allScrapboxPage.edges} />\n      </Grid>\n      <Grid container direction=\"row\" justify=\"center\">\n        <Grid item css={css`padding: 20px;`}>\n          <Link to={`/page/2`}><Button variant=\"contained\" color=\"primary\">Next</Button></Link>\n        </Grid>\n      </Grid>\n    </Layout>\n  )\n}\n\nexport default IndexPage\n\nexport const query = graphql`\n  query {\n    allScrapboxPage(limit: 12, sort: {fields: [pin, updated], order: [DESC, DESC]}, filter: {links: {nin: \"Undisclosed\"}}) {\n      edges {\n        node {\n          id\n          title\n          image\n          descriptions\n        }\n      }\n    }\n  }\n`\n","import React from \"react\"\nimport PropTypes from \"prop-types\"\nimport Link, {\n  withPrefix,\n  withAssetPrefix,\n  navigate,\n  push,\n  replace,\n  navigateTo,\n  parsePath,\n} from \"gatsby-link\"\nimport PageRenderer from \"./public-page-renderer\"\n\nconst StaticQueryContext = React.createContext({})\n\nconst StaticQuery = props => (\n  <StaticQueryContext.Consumer>\n    {staticQueryData => {\n      if (\n        props.data ||\n        (staticQueryData[props.query] && staticQueryData[props.query].data)\n      ) {\n        return (props.render || props.children)(\n          props.data ? props.data.data : staticQueryData[props.query].data\n        )\n      } else {\n        return <div>Loading (StaticQuery)</div>\n      }\n    }}\n  </StaticQueryContext.Consumer>\n)\n\nconst useStaticQuery = query => {\n  if (\n    typeof React.useContext !== `function` &&\n    process.env.NODE_ENV === `development`\n  ) {\n    throw new Error(\n      `You're likely using a version of React that doesn't support Hooks\\n` +\n        `Please update React and ReactDOM to 16.8.0 or later to use the useStaticQuery hook.`\n    )\n  }\n  const context = React.useContext(StaticQueryContext)\n  if (context[query] && context[query].data) {\n    return context[query].data\n  } else {\n    throw new Error(\n      `The result of this StaticQuery could not be fetched.\\n\\n` +\n        `This is likely a bug in Gatsby and if refreshing the page does not fix it, ` +\n        `please open an issue in https://github.com/gatsbyjs/gatsby/issues`\n    )\n  }\n}\n\nStaticQuery.propTypes = {\n  data: PropTypes.object,\n  query: PropTypes.string.isRequired,\n  render: PropTypes.func,\n  children: PropTypes.func,\n}\n\nfunction graphql() {\n  throw new Error(\n    `It appears like Gatsby is misconfigured. Gatsby related \\`graphql\\` calls ` +\n      `are supposed to only be evaluated at compile time, and then compiled away. ` +\n      `Unfortunately, something went wrong and the query was left in the compiled code.\\n\\n` +\n      `Unless your site has a complex or custom babel/Gatsby configuration this is likely a bug in Gatsby.`\n  )\n}\n\nexport {\n  Link,\n  withAssetPrefix,\n  withPrefix,\n  graphql,\n  parsePath,\n  navigate,\n  push, // TODO replace for v3\n  replace, // TODO remove replace for v3\n  navigateTo, // TODO: remove navigateTo for v3\n  StaticQueryContext,\n  StaticQuery,\n  PageRenderer,\n  useStaticQuery,\n}\n","const preferDefault = m => (m && m.default) || m\n\nif (process.env.BUILD_STAGE === `develop`) {\n  module.exports = preferDefault(require(`./public-page-renderer-dev`))\n} else if (process.env.BUILD_STAGE === `build-javascript`) {\n  module.exports = preferDefault(require(`./public-page-renderer-prod`))\n} else {\n  module.exports = () => null\n}\n","import React from \"react\"\nimport PropTypes from \"prop-types\"\n\nimport InternalPageRenderer from \"./page-renderer\"\nimport loader from \"./loader\"\n\nconst ProdPageRenderer = ({ location }) => {\n  const pageResources = loader.getResourcesForPathnameSync(location.pathname)\n  if (!pageResources) {\n    return null\n  }\n\n  return React.createElement(InternalPageRenderer, {\n    location,\n    pageResources,\n    ...pageResources.json,\n  })\n}\n\nProdPageRenderer.propTypes = {\n  location: PropTypes.shape({\n    pathname: PropTypes.string.isRequired,\n  }).isRequired,\n}\n\nexport default ProdPageRenderer\n","import { Link } from \"gatsby\"\nimport PropTypes from \"prop-types\"\nimport React from \"react\"\n\nconst Header = ({ siteTitle }) => (\n  <header\n    style={{\n      background: `mediumseagreen`,\n      marginBottom: `1.45rem`,\n    }}\n  >\n    <div\n      style={{\n        margin: `0 auto`,\n        maxWidth: 960,\n        padding: `1.45rem 1.0875rem`,\n      }}\n    >\n      <h1 style={{ margin: 0 }}>\n        <Link\n          to=\"/\"\n          style={{\n            color: `white`,\n            textDecoration: `none`,\n          }}\n        >\n          {siteTitle}\n        </Link>\n      </h1>\n    </div>\n  </header>\n)\n\nHeader.propTypes = {\n  siteTitle: PropTypes.string,\n}\n\nHeader.defaultProps = {\n  siteTitle: ``,\n}\n\nexport default Header\n","/**\n * Layout component that queries for data\n * with Gatsby's StaticQuery component\n *\n * See: https://www.gatsbyjs.org/docs/static-query/\n */\n\nimport React from \"react\"\nimport PropTypes from \"prop-types\"\nimport { StaticQuery, graphql } from \"gatsby\"\n\nimport Header from \"./header\"\nimport \"./layout.css\"\n\nimport { MuiThemeProvider, createMuiTheme } from '@material-ui/core/styles'\n\nconst theme = createMuiTheme({\n  palette: {\n    primary: {\n      main: \"#53B371\",\n      contrastText: '#fff',\n    },\n  },\n  typography: {\n    useNextVariants: true,\n  },\n  root: {\n    display: 'flex',\n    justifyContent: 'center',\n    flexWrap: 'wrap',\n  },\n})\n\nconst Layout = ({ children }) => (\n  <StaticQuery\n    query={graphql`\n      query SiteTitleQuery {\n        site {\n          siteMetadata {\n            title\n          }\n        }\n      }\n    `}\n    render={data => (\n      <>\n        <MuiThemeProvider theme={theme}>\n        <Header siteTitle={data.site.siteMetadata.title} />\n        <div\n          style={{\n            margin: `0 auto`,\n            maxWidth: 960,\n            padding: `0px 1.0875rem 1.45rem`,\n            paddingTop: 0,\n          }}\n        >\n          <main>{children}</main>\n          <footer>\n            © {new Date().getFullYear()}, Built with\n            {` `}\n            <a href=\"https://www.gatsbyjs.org\">Gatsby</a>\n          </footer>\n        </div>\n        </MuiThemeProvider>\n      </>\n    )}\n  />\n)\n\nLayout.propTypes = {\n  children: PropTypes.node.isRequired,\n}\n\nexport default Layout\n","import React from \"react\"\nimport { Link } from \"gatsby\"\nimport Grid from '@material-ui/core/Grid'\nimport Card from '@material-ui/core/Card'\nimport CardContent from '@material-ui/core/CardContent'\nimport { css } from '@emotion/core'\n\nconst GridItemSbCard = ({ pages }) => {\n  return pages.map(({ node }) => {\n    return (\n      <Grid item md={3} sm={6} alignItems=\"stretch\">\n        <Card>\n          <CardContent css={css`\n            height: 13.5rem;\n            position: relative;\n          `}>\n            <Link className=\"stretched-link\" to={`/${node.title}`}>\n              <div key={node.id}>\n                <div css={css`\n                  display: -webkit-box;\n                  -webkit-box-orient: vertical;\n                  -webkit-line-clamp: 3;\n                  overflow: hidden;\n                `}>\n                  {node.title}\n                </div>\n              </div>\n            </Link>\n            { node.image && <img src={node.image} alt={node.title} /> }\n          </CardContent>\n        </Card>\n      </Grid>\n    )\n  })\n}\n\nexport default GridItemSbCard","/**\n * SEO component that queries for data with\n *  Gatsby's useStaticQuery React hook\n *\n * See: https://www.gatsbyjs.org/docs/use-static-query/\n */\n\nimport React from \"react\"\nimport PropTypes from \"prop-types\"\nimport Helmet from \"react-helmet\"\nimport { useStaticQuery, graphql } from \"gatsby\"\n\nfunction SEO({ description, lang, meta, keywords, title }) {\n  const { site } = useStaticQuery(\n    graphql`\n      query {\n        site {\n          siteMetadata {\n            title\n            description\n            author\n          }\n        }\n      }\n    `\n  )\n\n  const metaDescription = description || site.siteMetadata.description\n\n  return (\n    <Helmet\n      htmlAttributes={{\n        lang,\n      }}\n      title={title}\n      titleTemplate={`%s | ${site.siteMetadata.title}`}\n      meta={[\n        {\n          name: `description`,\n          content: metaDescription,\n        },\n        {\n          property: `og:title`,\n          content: title,\n        },\n        {\n          property: `og:description`,\n          content: metaDescription,\n        },\n        {\n          property: `og:type`,\n          content: `website`,\n        },\n        {\n          name: `twitter:card`,\n          content: `summary`,\n        },\n        {\n          name: `twitter:creator`,\n          content: site.siteMetadata.author,\n        },\n        {\n          name: `twitter:title`,\n          content: title,\n        },\n        {\n          name: `twitter:description`,\n          content: metaDescription,\n        },\n      ]\n        .concat(\n          keywords.length > 0\n            ? {\n                name: `keywords`,\n                content: keywords.join(`, `),\n              }\n            : []\n        )\n        .concat(meta)}\n    />\n  )\n}\n\nSEO.defaultProps = {\n  lang: `en`,\n  meta: [],\n  keywords: [],\n  description: ``,\n}\n\nSEO.propTypes = {\n  description: PropTypes.string,\n  lang: PropTypes.string,\n  meta: PropTypes.arrayOf(PropTypes.object),\n  keywords: PropTypes.arrayOf(PropTypes.string),\n  title: PropTypes.string.isRequired,\n}\n\nexport default SEO\n"],"sourceRoot":""}