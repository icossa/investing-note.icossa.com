{"version":3,"sources":["webpack:///./src/templates/scrapbox-page-list.js"],"names":["pageContext","previousPage","nextPage","pages","data","allScrapboxPage","edges","container","direction","spacing","justifyContent","justify","item","css","to","variant","color","query"],"mappings":"6SAUe,sBAAwD,IAAD,IAApDA,YAAeC,EAAqC,EAArCA,aAAcC,EAAuB,EAAvBA,SACvCC,EAD8D,EAAXC,KACtCC,gBAAgBC,MACnC,OACE,YAAC,IAAD,KACE,YAAC,IAAD,CACEC,WAAS,EACTC,UAAU,MACVC,QAAS,GACTC,eAAe,UAEf,YAAC,IAAD,CAAgBP,MAAOA,KAEzB,YAAC,IAAD,CAAMI,WAAS,EAACC,UAAU,MAAMG,QAAQ,SAASF,QAAS,IACxD,YAAC,IAAD,CAAMG,MAAI,EAACC,IAAG,GACXZ,EAAe,YAAC,IAAD,CAAMa,GAAE,IAAMb,EAAgBY,IAAG,GAA4B,YAAC,IAAD,CAAQE,QAAQ,YAAYC,MAAM,WAAlC,UAAoE,GAChJd,EAAW,YAAC,IAAD,CAAMY,GAAE,IAAMZ,GAAY,YAAC,IAAD,CAAQa,QAAQ,YAAYC,MAAM,WAAlC,SAAmE,OAO5G,IAAMC,EAAK","file":"component---src-templates-scrapbox-page-list-js-df4dab7384d133eeef52.js","sourcesContent":["import React from \"react\"\nimport { graphql, Link } from \"gatsby\"\nimport Layout from \"../components/layout\"\n\nimport Grid from '@material-ui/core/Grid';\nimport Button from '@material-ui/core/Button'\n\nimport { css } from '@emotion/core'\nimport GridItemSbCard from \"../components/gridItemSbCard\";\n\nexport default ({ pageContext: { previousPage, nextPage }, data }) => {\n  const pages = data.allScrapboxPage.edges\n  return (\n    <Layout>\n      <Grid\n        container\n        direction=\"row\"\n        spacing={16}\n        justifyContent=\"center\"\n      >\n        <GridItemSbCard pages={pages} />\n      </Grid>\n      <Grid container direction=\"row\" justify=\"center\" spacing={16}>\n        <Grid item css={css`padding: 20px;`}>\n          {previousPage ? <Link to={`/${previousPage}`} css={css`margin-right: 10px;`}><Button variant=\"contained\" color=\"primary\">Prev.</Button></Link> : ''}\n          {nextPage ? <Link to={`/${nextPage}`}><Button variant=\"contained\" color=\"primary\">Next</Button></Link> : ''}\n        </Grid>\n      </Grid>\n    </Layout>\n  )\n}\n\nexport const query = graphql`\n  query($skip: Int!, $limit: Int!){\n    allScrapboxPage(limit: $limit, skip: $skip, sort: {fields: [pin, updated], order: [DESC, DESC]}, filter: {links: {nin: \"Undisclosed\"}}) {\n      totalCount\n      edges {\n        node {\n          id\n          title\n          image\n          descriptions\n          lines {\n            id\n            text\n          }\n        }\n      }\n    }\n  }\n`\n"],"sourceRoot":""}